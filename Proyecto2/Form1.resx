<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>